class No:
    def __init__(self, valor):
        self.valor = valor
        self.esquerda = None
        self.direita = None

class ArvoreBinaria:
    def __init__(self):
        self.raiz = None

    def inserir(self, valor):
        novo_no = No(valor)
        if self.raiz is None:
            self.raiz = novo_no
            return
        atual = self.raiz
        while True:
            if valor < atual.valor:
                if atual.esquerda is None:
                    atual.esquerda = novo_no
                    return
                atual = atual.esquerda
            elif valor > atual.valor:
                if atual.direita is None:
                    atual.direita = novo_no
                    return
                atual = atual.direita

    def remover(self, valor):
        pai = None
        atual = self.raiz
        while atual is not None:
            if valor < atual.valor:
                pai = atual
                atual = atual.esquerda
            elif valor > atual.valor:
                pai = atual
                atual = atual.direita
            else:
                if atual.esquerda is None and atual.direita is None:
                    if pai is None:
                        self.raiz = None
                    elif pai.esquerda == atual:
                        pai.esquerda = None
                    else:
                        pai.direita = None
                    return True
                elif atual.esquerda is None:
                    if pai is None:
                        self.raiz = atual.direita
                    elif pai.esquerda == atual:
                        pai.esquerda = atual.direita
                    else:
                        pai.direita = atual.direita
                    return True
                elif atual.direita is None:
                    if pai is None:
                        self.raiz = atual.esquerda
                    elif pai.esquerda == atual:
                        pai.esquerda = atual.esquerda
                    else:
                        pai.direita = atual.esquerda
                    return True
                else:
                    sucessor = self._encontrar_sucessor(atual)
                    atual.valor = sucessor.valor
                    pai = atual
                    atual = atual.direita
                    valor = sucessor.valor

        return False

   def _encontrar_sucessor(self, no):
        atual = no.direita
        while atual.esquerda is not None:
            atual = atual.esquerda
        return atual

class Prova2AVEstruturaDeDados:
    def __init__(self):
        self.opc = 0
        self.arvore = Arvo
